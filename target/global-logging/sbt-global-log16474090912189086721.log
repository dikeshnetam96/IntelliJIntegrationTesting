[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\c14473b\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\c14473b\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.2 (Oracle Corporation Java 20.0.2)
[debug]       Load.loadUnit: plugins took 80.3262ms
[debug]       Load.loadUnit: defsScala took 0.3407ms
[debug] [Loading] Scanning directory C:\Users\c14473b\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\c14473b\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.6095 ms
[debug]           Load.resolveProject(global-plugins) took 37.9542ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\c14473b\.sbt\1.0\plugins, plugins: List(<none>))) took 67.2796ms
[debug] [Loading] Done in C:\Users\c14473b\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 85.8503ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1675ms
[debug]     Load.loadUnit(file:/C:/Users/c14473b/.sbt/1.0/plugins/, ...) took 174.8617ms
[debug]   Load.apply: load took 320.8699ms
[debug]   Load.apply: resolveProjects took 3.9717ms
[debug]   Load.apply: finalTransforms took 52.3781ms
[debug]   Load.apply: config.delegates took 9.0395ms
[debug]   Load.apply: Def.make(settings)... took 352.6059ms
[debug]   Load.apply: structureIndex took 92.3733ms
[debug]   Load.apply: mkStreams took 1.7407ms
[info] loading global plugins from C:\Users\c14473b\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3884.2035ms
[debug]           Load.loadUnit: plugins took 19.8866ms
[debug]           Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\c14473b\IdeaProjects\udemy-scala-beginners\project
[debug]             Load.loadUnit: mkEval took 5.5491ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\c14473b\IdeaProjects\udemy-scala-beginners\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1309 ms
[info] loading settings for project udemy-scala-beginners-build from idea.sbt ...
[debug]               Load.resolveProject(udemy-scala-beginners-build) took 2.6286ms
[debug]             Load.loadTransitive: finalizeProject(Project(id udemy-scala-beginners-build, base: C:\Users\c14473b\IdeaProjects\udemy-scala-beginners\project, plugins: List(<none>))) took 4.128ms
[debug] [Loading] Done in C:\Users\c14473b\IdeaProjects\udemy-scala-beginners\project, returning: (udemy-scala-beginners-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2030.4981ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.4775ms
[debug]         Load.loadUnit(file:/C:/Users/c14473b/IdeaProjects/udemy-scala-beginners/project/, ...) took 2058.935ms
[debug]       Load.apply: load took 2060.4387ms
[debug]       Load.apply: resolveProjects took 0.1756ms
[debug]       Load.apply: finalTransforms took 10.2706ms
[debug]       Load.apply: config.delegates took 0.2992ms
[debug]       Load.apply: Def.make(settings)... took 58.631ms
[debug]       Load.apply: structureIndex took 21.3771ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\Users\c14473b\IdeaProjects\udemy-scala-beginners\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6536.5707ms
[debug]     Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory C:\Users\c14473b\IdeaProjects\udemy-scala-beginners
[debug]       Load.loadUnit: mkEval took 0.3586ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.7589 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 39.7564ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\c14473b\IdeaProjects\udemy-scala-beginners, plugins: List(<none>))) took 42.9678ms
[debug] [Loading] Done in C:\Users\c14473b\IdeaProjects\udemy-scala-beginners, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1660.6248ms
[debug]     Load.loadUnit: cleanEvalClasses took 23.1142ms
[debug]   Load.loadUnit(file:/C:/Users/c14473b/IdeaProjects/udemy-scala-beginners/, ...) took 8221.3575ms
[debug] Load.apply: load took 8223.5076ms
[debug] Load.apply: resolveProjects took 0.1427ms
[debug] Load.apply: finalTransforms took 22.4371ms
[debug] Load.apply: config.delegates took 0.224ms
[debug] Load.apply: Def.make(settings)... took 66.8867ms
[debug] Load.apply: structureIndex took 18.2397ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to udemy-scala-beginners (in build file:/C:/Users/c14473b/IdeaProjects/udemy-scala-beginners/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55783 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55783, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to udemy-scala-beginners (in build file:/C:/Users/c14473b/IdeaProjects/udemy-scala-beginners/)
[debug] > Exec(idea-shell, None, None)
